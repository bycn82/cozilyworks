
<FileDeclaration> public  class Example {public  Integer nice;public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}} 
<TypeDeclaration>public  class Example {public  Integer nice;public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}}
<ClassOrInterfaceDeclaration>public  class Example {public  Integer nice;public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}}
<ClassDeclaration>public  class Example {public  Integer nice;public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}}
<NormalClassDeclaration>public  class Example {public  Integer nice;public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}}
<Modifiers>public 
<AnnoOrKeywords>public public 
</AnnoOrKeywords>
</Modifiers> class Example 
<ClassBody>{public  Integer nice;public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}}{
<ClassBodyDeclaration>public  Integer nice;
<MemberDecl>public  Integer nice;
<FieldDeclaration>public  Integer nice;
<Modifiers>public 
<AnnoOrKeywords>public public 
</AnnoOrKeywords>
</Modifiers> 
<Type>Integer
<ClassOrInterfaceType>Integer
<IdentifierArgs>IntegerInteger
</IdentifierArgs>
</ClassOrInterfaceType>
</Type> 
<VariableDeclarator>nicenice
</VariableDeclarator>;
</FieldDeclaration>
</MemberDecl>
</ClassBodyDeclaration>
<ClassBodyDeclaration>public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}
<MemberDecl>public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}
<MethodDeclaration>public static   void main (  String[] arg )throws Exception{ String i= new A (  )   ;}
<Modifiers>public static 
<AnnoOrKeywords>public public 
</AnnoOrKeywords>
<AnnoOrKeywords>static static 
</AnnoOrKeywords>
</Modifiers>  
<ReturnType>voidvoid
</ReturnType> main 
<FormalParameters>(  String[] arg )( 
<FormalParameterDecls> String[] arg
<NormalParameterDecl> String[] arg[VariableModifiers] 
<Type>String[]
<ClassOrInterfaceType>String
<IdentifierArgs>StringString
</IdentifierArgs>
</ClassOrInterfaceType>[]
</Type> arg
</NormalParameterDecl>
</FormalParameterDecls> )
</FormalParameters>throws 
<QualifiedNameList>Exception
<QualifiedName>ExceptionException
</QualifiedName>
</QualifiedNameList>
<BlockOrSemi>{ String i= new A (  )   ;}
<Block>{ String i= new A (  )   ;}{
<BlockStatement> String i= new A (  )   ;
<LocalVariableDeclarationStatement> String i= new A (  )   ;
<LocalVariableDeclaration> String i= new A (  )   [VariableModifiers] 
<Type>String
<ClassOrInterfaceType>String
<IdentifierArgs>StringString
</IdentifierArgs>
</ClassOrInterfaceType>
</Type> 
<VariableDeclarator>i= new A (  )   i= 
<VariableInitializer>new A (  )   
<Expression>new A (  )   
<ConditionalExpression>new A (  ) 
<ConditionalOrExpression>new A (  ) 
<ConditionalAndExpression>new A (  ) 
<InclusiveOrExpression>new A (  ) 
<ExclusiveOrExpression>new A (  ) 
<AndExpression>new A (  ) 
<EqualityExpression>new A (  ) 
<InstanceOfExpression>new A (  ) 
<RelationalExpression>new A (  ) 
<ShiftExpression>new A (  ) 
<AdditiveExpression>new A (  ) 
<MultiplicativeExpression>new A (  ) 
<UnaryExpression>new A (  ) 
<UnaryExpressionNotPlusMinus>new A (  ) 
<Primary>new A (  ) 
<Creator>new A (  ) new 
<ClassOrInterfaceType>A
<IdentifierArgs>AA
</IdentifierArgs>
</ClassOrInterfaceType> 
<ClassCreatorRest>(  ) 
<Arguments>(  )(  )
</Arguments> 
</ClassCreatorRest>
</Creator>
</Primary>
</UnaryExpressionNotPlusMinus>
</UnaryExpression>
</MultiplicativeExpression>
</AdditiveExpression>
</ShiftExpression>
</RelationalExpression>
</InstanceOfExpression>
</EqualityExpression>
</AndExpression>
</ExclusiveOrExpression>
</InclusiveOrExpression>
</ConditionalAndExpression>
</ConditionalOrExpression>
</ConditionalExpression>  
</Expression>
</VariableInitializer>
</VariableDeclarator>
</LocalVariableDeclaration>;
</LocalVariableDeclarationStatement>
</BlockStatement>}
</Block>
</BlockOrSemi>
</MethodDeclaration>
</MemberDecl>
</ClassBodyDeclaration>}
</ClassBody>
</NormalClassDeclaration>
</ClassDeclaration>
</ClassOrInterfaceDeclaration>
</TypeDeclaration>
</FileDeclaration>