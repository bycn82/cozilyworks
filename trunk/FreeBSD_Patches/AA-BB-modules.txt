--------------------------------------------------------------------
/usr/src/sys/AA/AA.h
--------------------------------------------------------------------
int func1(int flag);
extern int func2(int flag); /* try extern as well. */

--------------------------------------------------------------------
/usr/src/sys/AA/AA.c
--------------------------------------------------------------------
#include <sys/param.h>
#include <sys/module.h>
#include <sys/kernel.h>
#include <sys/systm.h>

#include <../../AA/AA.h>

int func1(int flag) { printf("func1"); return flag;}
int func2(int flag) { printf("func2"); return flag;}

/* The function called at load/unload. */
static int event_handler(struct module *module, int event, void *arg) {
        int e = 0; /* Error, 0 for normal return status */
        switch (event) {
        case MOD_LOAD:
                uprintf("AA loaded\n");
				func1(1);
				func2(1);
                break;
        case MOD_UNLOAD:
                uprintf("Bye Bye AA\n");
                break;
        default:
                e = EOPNOTSUPP; /* Error, Operation Not Supported */
                break;
        }
       
        return(e);
}

/* The second argument of DECLARE_MODULE. */
static moduledata_t aa_conf = {
    "aa",    /* module name */
     event_handler,  /* event handler */
     NULL            /* extra data */
};

MODULE_VERSION(aa, 1);
DECLARE_MODULE(aa, aa_conf, SI_SUB_DRIVERS, SI_ORDER_MIDDLE);

--------------------------------------------------------------------
/usr/src/sys/BB/BB.c
--------------------------------------------------------------------
#include <sys/param.h>
#include <sys/module.h>
#include <sys/kernel.h>
#include <sys/systm.h>

#include <../../AA/AA.h>

/* The function called at load/unload. */
static int event_handler(struct module *module, int event, void *arg) {
        int e = 0; /* Error, 0 for normal return status */
        switch (event) {
        case MOD_LOAD:
                uprintf("BB loaded\n");
				func1(1);
				func2(1);
                break;
        case MOD_UNLOAD:
                uprintf("Bye Bye BB!\n");
                break;
        default:
                e = EOPNOTSUPP; /* Error, Operation Not Supported */
                break;
        }
       
        return(e);
}

/* The second argument of DECLARE_MODULE. */
static moduledata_t bb_conf = {
    "bb",    /* module name */
     event_handler,  /* event handler */
     NULL            /* extra data */
};

MODULE_VERSION(bb,1);
DECLARE_MODULE(bb, bb_conf, SI_SUB_DRIVERS, SI_ORDER_MIDDLE);
MODULE_DEPEND(bb, aa, 1, 1,2);

--------------------------------------------------------------------
/usr/src/sys/modules/BB/Makefile
--------------------------------------------------------------------
# $FreeBSD: head/sys/modules/ipfw_nat/Makefile 240494 2012-09-14 11:51:49Z glebius $

.PATH: ${.CURDIR}/../../BB/

KMOD=   BB
SRCS=   BB.c

.include <bsd.kmod.mk>

--------------------------------------------------------------------
/usr/src/sys/modules/AA/Makefile
--------------------------------------------------------------------
# $FreeBSD: head/sys/modules/ipfw_nat/Makefile 240494 2012-09-14 11:51:49Z glebius $

.PATH: ${.CURDIR}/../../AA/

KMOD=   AA
SRCS=   AA.c

.include <bsd.kmod.mk>
