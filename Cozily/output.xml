
<FileDeclaration>
<TypeDeclaration>
<ClassOrInterfaceDeclaration>
<ClassDeclaration>
<NormalClassDeclaration>
<Modifiers>
<Modifier>public
</Modifier> 
</Modifiers> class Example 
<ClassBody>{
<ClassBodyDeclaration>
<MemberDecl>
<MethodDeclaration>
<Modifiers>
<Modifier>public
</Modifier> 
<Modifier>static
</Modifier> 
</Modifiers>  
<ReturnType>void
</ReturnType> main 
<FormalParameters>( 
<FormalParameterDecls>
<NormalParameterDecl>[VariableModifiers] 
<Type>
<ClassOrInterfaceType>String 
</ClassOrInterfaceType>[]
</Type> arg
</NormalParameterDecl>
</FormalParameterDecls> )
</FormalParameters>
<BlockOrComma>
<Block>{
<BlockStatement>
<Statement>
<Expression>
<ConditionalExpression>
<ConditionalOrExpression>
<ConditionalAndExpression>
<InclusiveOrExpression>
<ExclusiveOrExpression>
<AndExpression>
<EqualityExpression>
<InstanceOfExpression>
<RelationalExpression>
<ShiftExpression>
<AdditiveExpression>
<MultiplicativeExpression>
<UnaryExpression>
<UnaryExpressionNotPlusMinus>
<Primary>System.out.println
<IdentifierSuffix>
<Arguments>( 
<ExpressionList>
<Expression>
<ConditionalExpression>
<ConditionalOrExpression>
<ConditionalAndExpression>
<InclusiveOrExpression>
<ExclusiveOrExpression>
<AndExpression>
<EqualityExpression>
<InstanceOfExpression>
<RelationalExpression>
<ShiftExpression>
<AdditiveExpression>
<MultiplicativeExpression>
<UnaryExpression>
<UnaryExpressionNotPlusMinus>
<Primary>
<Literal>"nice"
</Literal>
</Primary>
</UnaryExpressionNotPlusMinus>
</UnaryExpression>
</MultiplicativeExpression>
</AdditiveExpression>
</ShiftExpression>
</RelationalExpression>
</InstanceOfExpression>
</EqualityExpression>
</AndExpression>
</ExclusiveOrExpression>
</InclusiveOrExpression>
</ConditionalAndExpression>
</ConditionalOrExpression>
</ConditionalExpression>  
</Expression>
</ExpressionList> )
</Arguments>
</IdentifierSuffix>
</Primary>
</UnaryExpressionNotPlusMinus>
</UnaryExpression>
</MultiplicativeExpression>
</AdditiveExpression>
</ShiftExpression>
</RelationalExpression>
</InstanceOfExpression>
</EqualityExpression>
</AndExpression>
</ExclusiveOrExpression>
</InclusiveOrExpression>
</ConditionalAndExpression>
</ConditionalOrExpression>
</ConditionalExpression>  
</Expression> ;

</Statement>
</BlockStatement>}
</Block>
</BlockOrComma>
</MethodDeclaration>
</MemberDecl>
</ClassBodyDeclaration>}
</ClassBody>
</NormalClassDeclaration>
</ClassDeclaration>
</ClassOrInterfaceDeclaration>
</TypeDeclaration>
</FileDeclaration>