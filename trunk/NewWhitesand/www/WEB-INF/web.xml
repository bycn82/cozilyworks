<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>COZLY.com</display-name>

	<!--
		- Key of the system property that should specify the root directory of this
		- web app. Applied by WebAppRootListener or Log4jConfigServlet.
	-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>cozly.com root</param-value><!--  Adjust this value in log4j.properties -->
	</context-param>

	<!--
		- Location of the Log4J config file, for initialization and refresh checks.
		- Applied by Log4jConfigListener.
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>


	<!--
		- Location of the XML file that defines the root application context.
		- Applied by ContextLoaderServlet.
		-
		- Can include "/WEB-INF/dataAccessContext-local.xml" for a single-database
		- context, or "/WEB-INF/dataAccessContext-jta.xml" for a two-database context.
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
		<!--
			<param-value>
			/WEB-INF/dataAccessContext-jta.xml  /WEB-INF/applicationContext.xml
			</param-value>
		-->
	</context-param>

	<context-param>
		<param-name>
			javax.servlet.jsp.jstl.fmt.localizationContext
		</param-name>
		<param-value>resources.application</param-value>
	</context-param>


	<!--
		- Configures Log4J for this web app.
		- As this context specifies a context-param "log4jConfigLocation", its file path
		- is used to load the Log4J configuration, including periodic refresh checks.
		-
		- Would fall back to default Log4J initialization (non-refreshing) if no special
		- context-params are given.
		-
		- Exports a "web app root key", i.e. a system property that specifies the root
		- directory of this web app, for usage in log file paths.
		- This web app specifies "petclinic.root" (see log4j.properties file).
	-->
	<!-- Leave the listener commented-out if using JBoss -->
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>

	<!--
		- Loads the root application context of this web app at startup,
		- by default from "/WEB-INF/applicationContext.xml".
		- Note that you need to fall back to Spring's ContextLoaderServlet for
		- J2EE servers that do not follow the Servlet 2.4 initialization order.
		-
		- Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
		- to access it anywhere in the web application, outside of the framework.
		-
		- The root context is the parent of all servlet-specific contexts.
		- This means that its beans are automatically available in these child contexts,
		- both for getBean(name) calls and (external) bean references.
	-->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<filter>
		<!-- mod_rewrite-esque URL rewriting; uses urlrewrite.xml -->
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>
			org.tuckey.web.filters.urlrewrite.UrlRewriteFilter
		</filter-class>
		<init-param>
			<!-- reloads configuration every 5 seconds to ease development;
				set to 0 to disable reloading -->
			<param-name>confReloadCheckInterval</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>WARN</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>Set Character Encoding</filter-name>
		<filter-class>
			com.cozly.web.filter.SetCharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>


	<!-- Hessian remoting servlet define -->
	<servlet>
		<servlet-name>remoting</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>remoting</servlet-name>
		<url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>

	<filter-mapping>
		<filter-name>Set Character Encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<url-pattern>/my/</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<url-pattern>/qa/</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<url-pattern>/admin/</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<url-pattern>*.jng</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<url-pattern>/ajax/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>OpenHibernateSessionInView</filter-name>
		<url-pattern>/qa/question/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--
		<servlet>
		<servlet-name>Connector</servlet-name>
		<servlet-class>
		com.fredck.FCKeditor.connector.ConnectorServlet
		</servlet-class>
		<init-param>
		<param-name>baseDir</param-name>
		<param-value>/UserFiles/</param-value>
		</init-param>
		<init-param>
		<param-name>debug</param-name>
		<param-value>true</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
		</servlet>
		
		<servlet>
		<servlet-name>SimpleUploader</servlet-name>
		<servlet-class>
		com.fredck.FCKeditor.uploader.SimpleUploaderServlet
		</servlet-class>
		<init-param>
		<param-name>baseDir</param-name>
		<param-value>/UserFiles/</param-value>
		</init-param>
		<init-param>
		<param-name>debug</param-name>
		<param-value>true</param-value>
		</init-param>
		<init-param>
		<param-name>enabled</param-name>
		<param-value>true</param-value>
		</init-param>
		<init-param>
		<param-name>AllowedExtensionsFile</param-name>
		<param-value>
		mp3|rm|rmvb|avi|wmv|wma|asf|zip|rar|txt|doc|xls|csv|pdf
		</param-value>
		</init-param>
		<init-param>
		<param-name>DeniedExtensionsFile</param-name>
		<param-value>
		php|php3|php5|phtml|asp|aspx|ascx|jsp|cfm|cfc|pl|bat|exe|dll|reg|cgi
		</param-value>
		</init-param>
		<init-param>
		<param-name>AllowedExtensionsImage</param-name>
		<param-value>jpg|gif|jpeg|png|bmp</param-value>
		</init-param>
		<init-param>
		<param-name>DeniedExtensionsImage</param-name>
		<param-value></param-value>
		</init-param>
		<init-param>
		<param-name>AllowedExtensionsFlash</param-name>
		<param-value>swf|fla</param-value>
		</init-param>
		<init-param>
		<param-name>DeniedExtensionsFlash</param-name>
		<param-value></param-value>
		</init-param>
		<load-on-startup>3</load-on-startup>
		</servlet>
	-->

	<!-- Standard Action Servlet Configuration (with debugging) -->
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>
			org.apache.struts.action.ActionServlet
		</servlet-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>/WEB-INF/struts-config.xml</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>2</param-value>
		</init-param>
		<init-param>
			<param-name>detail</param-name>
			<param-value>2</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>uk.ltd.getahead.dwr.DWRServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>

	<servlet>
		<description></description>
		<display-name>WeatherChannelServlet</display-name>
		<servlet-name>WeatherChannelServlet</servlet-name>
		<servlet-class>
			com.jongo.web.servlet.WeatherChannelServlet
		</servlet-class>
		<init-param>
			<description>Your Weather.com License Key</description>
			<param-name>license_id</param-name>
			<param-value>db1245716f02e943</param-value>
		</init-param>
		<init-param>
			<description>Your Weather.com Partner ID</description>
			<param-name>partner_id</param-name>
			<param-value>1018418101</param-value>
		</init-param>
		<init-param>
			<description>
				Servlet Debug Mode (1 to open, 0 to close)
			</description>
			<param-name>debug</param-name>
			<param-value>1</param-value>
		</init-param>
		<init-param>
			<description>
				Weather Data Cache Directory, default to /WEB-INF/cache
			</description>
			<param-name>cache_dir</param-name>
			<param-value>/WEB-INF/cache</param-value>
		</init-param>
		<init-param>
			<description>
				Weather Data Cache Life, you can specify time
				unit(s:second, m:minute, h:hour,d:days)
			</description>
			<param-name>cache_life</param-name>
			<param-value>2h</param-value>
		</init-param>
	</servlet>
	<servlet>
		<display-name>CurrencyServlet</display-name>
		<servlet-name>CurrencyServlet</servlet-name>
		<servlet-class>
			com.jongo.web.servlet.CurrencyServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<!-- Standard Action Servlet Mapping -->
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.coz</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>WeatherChannelServlet</servlet-name>
		<url-pattern>/javascripts/weather.js</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.coz</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/404.jsp</location>
	</error-page>

	<!-- Struts Tag Library Descriptors -->
	<jsp-config>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
			<taglib-location>/WEB-INF/tld/c.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>
				http://java.sun.com/jsp/jstl/functions
			</taglib-uri>
			<taglib-location>/WEB-INF/tld/fn.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/fmt</taglib-uri>
			<taglib-location>/WEB-INF/tld/fmt.tld</taglib-location>
		</taglib>

		<jsp-property-group>
			<description>For jsp config the application</description>
			<display-name>JSPConfiguration</display-name>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
			<page-encoding>UTF-8</page-encoding>
			<scripting-invalid>false</scripting-invalid>
		</jsp-property-group>

	</jsp-config>
</web-app>
